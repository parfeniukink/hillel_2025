Meeting summary for Concurrency. Web introduction | Python Pro (30.12.2024) Дмитро Парфенюк (12/30/2024)

Quick recap


Дмитро обговорив концепції синхронного та асинхронного Python, віртуальних середовищ, а також важливість протоколів у мережевому спілкуванні. Він також пояснив процес передачі та перетворення даних, різні рівні мережевого зв'язку та протокол, який використовується для зв'язку між службами. Нарешті, він торкнувся ролі серверів в протоколі і натякнув на наступний розділ проекту, який передбачав би написання окремого проекту і вибір між простим і складним.
Next steps
• Студенти вивчають мережеві моделі OSI та TCP/IP для розуміння мережевих протоколів та зв'язку.
• Студенти вивчають та розуміють DNS (Система доменних імен) та як вона переводить доменні імена на IP-адреси.
• Студенти ознайомляться з методами HTTP (GET, POST, PUT, PATCH, DELETE) та їх використанням у веб-додатках.
• Студенти вивчають концепцію брандмауерів і як вони контролюють мережевий трафік між різними мережами.
• Студенти на практиці використовують такі інструменти, як Wireshark або подібні інструменти мережевого аналізу, щоб спостерігати мережевий трафік і протоколи в дії.
• Студенти для дослідження та розуміння відмінностей між синхронним та асинхронним спілкуванням у веб-додатках.
• Студенти вивчають концепцію мікросервісів і те, як вони спілкуються через мережі.
• Студенти готуються до наступної сесії, де вони почнуть працювати над новим проектом, потенційно залучаючи концепції веб-розробки, обговорювані на цій зустрічі.


Summary


Синхронізація Python і віртуальні середовища

Дмитро обговорив концепцію синхронного та асинхронного Python, пояснивши, що Python можна запускати в потоках або процесах. Він зазначив, що можливість відключати Jill і використовувати потоки для синхронних завдань все ще знаходиться в альфа-версії і ще не широко використовується. Дмитро також обговорив важливість віртуальних середовищ у Python, пояснивши, що вони дозволяють ізольовані середовища, де бібліотеки можуть бути встановлені та доступні безпосередньо. Він продемонстрував, як створити та активувати віртуальне середовище, а також як встановити та використовувати бібліотеку Requiem у ній. Дмитро також торкнувся важливості вибору правильного перекладача при запуску сценарію, а також того, як перевірити, який перекладач зараз використовується.


Управління рядками і запитами GT

Дмитро обговорив процес створення та управління списком GT рядків, які використовуються для стимулювання запитів до стороннього ресурсу. Він пояснив використання функції для форматування зв'язків і процес генерації випадкових рядків. Дмитро також обговорив використання синхронної функції для подання запитів та необхідність порівняння різниці між синхронною та асинхронною функціями. Він продемонстрував, як використовувати синхронну функцію з запитом блокування в Python і як використовувати неблокуючу функцію, щоб уникнути проблем блокування. Дмитро також обговорив питання використання бібліотеки під назвою «Бібліотечний квест» та як з її допомогою робити асинхронні запити. Він зробив висновок, запропонувавши команді інтегрувати інтерфейс синхронної бібліотеки для досягнення такої ж продуктивності.


Пояснення основ інфраструктури Інтернету

Дмитро пояснив команді концепцію інтернету, використовуючи фізичну аналогію комутаторів і маршрутизаторів, щоб проілюструвати, як дані передаються між мережами. Він підкреслив, що Інтернет являє собою велику мережу взаємопов'язаних пристроїв, з маршрутизаторами і комутаторами, які виступають в якості основних пристроїв для маршрутизації трафіку між різними мережами. Дмитро також представив ідею ієрархічних моделей для розуміння інфраструктури інтернету, але не став вникати в деталі. Команда, здавалося, розуміла основні поняття, причому більшість позитивно відреагувала на пояснення.


Розуміння протоколів в мережевих комунікаціях

Дмитро обговорив концепцію протоколів в мережевих комунікаціях, пояснивши, що це низькорівневі структури даних, які визначають, як різні компоненти взаємодіють один з одним. Він використав приклад Internet Control Message Protocol (ICMP), щоб проілюструвати цю концепцію. Дмитро також торкнувся ідеї стека протоколів, який складається з декількох протоколів, що взаємодіють на різних рівнях. Він згадав фізичний рівень як перший у цьому стеку, де відбувається двійкове перетворення даних. Він підкреслив, що протоколи мають важливе значення для формування глобальної системи на кшталт Інтернету, оскільки вони визначають взаємодію між різними компонентами.
Передача даних і мережеві протоколи

Дмитро пояснив процес передачі та перетворення даних з електричних сигналів у двійковий код. Він обговорив роль рівня каналу у визначенні протоколів та фізичних взаємодій, а також відповідальність мережевого рівня за маршрутизацію та адресацію. Дмитро також торкнувся важливості таких протоколів, як TISP та TCP/IP для забезпечення цілісності та доставки даних. Він використовував аналогію будинку і багатоквартирного будинку для пояснення IP-адрес і портів. Нарешті, він описав процес інкапсуляції даних і як він використовується для передачі даних через різні рівні мережі.


Вивчення рівнів мережевих комунікацій

Дмитро обговорив різні рівні мережевого зв’язку, від фізичного до прикладного рівня, використовуючи в якості еталонної моделі OSI. Він пояснив, що кожен рівень має свої протоколи і функції, і що розуміння їх має вирішальне значення для розробників, які працюють над мікросервісами. Дмитро також представив концепцію DNS та її значення у веб-комунікації. Він використав приклад гіпотетичної мережі з клієнтом, підключеним до коментатора, щоб проілюструвати, як трафік проходить через мережу. Розмова закінчилася підготовкою Дмитра до демонстрації програми, яка дозволяє стимулювати мережу.


Розгортання серверів та мережева взаємодія

Дмитро обговорив процес розгортання сервера і підключення до нього через роутер. Він пояснив, що для взаємодії з сервером потрібно бути в тій же мережі, що і сервер. Він також обговорив концепцію DNS, пояснивши, що це сервер, який підключається до доменного імені і переводить його в IP-адресу. Дмитро також пояснив важливість розуміння свого місця в ієрархії мережевих взаємодій, наголосивши на необхідності знати, як відкривати порти, щоб процеси були доступними. Він прийшов до висновку, що розуміння цих концепцій має вирішальне значення для взаємодії з різними системами та мережами.


Компоненти протоколу та ролі сервера

Дмитро обговорив протокол, який використовується для комунікації між сервісами, підкресливши його простоту та універсальність. Він пояснив, що протокол складається з трьох основних компонентів: адреса, метод і дані. Він також уточнив різницю між синхронними і асинхронними передачами, заявивши, що синхронні передачі вимагають більшої підтримки і бібліотек. Дмитро також розповів про використання параметрів запитів і тіл у протоколі, а також про те, як вони можуть бути використані для передачі інформації. Він також торкнувся ролі серверів в протоколі, таких як сервер-заявник і enjinx. Нарешті, він натякнув на наступний розділ проекту, який передбачає написання окремого проекту і вибір між простим і складним.
